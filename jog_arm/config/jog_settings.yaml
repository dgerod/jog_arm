## SIMULATION
use_gazebo: true # Whether the robot is started in a Gazebo simulation environment

# TOPICS
cartesian_command_in_topic:  jog_arm_server/cartesian_command # Topic for xyz commands
joint_command_in_topic: jog_arm_server/joint_command # Topic for angle commands
joint_topic:  ariac/joint_states
warning_topic: jog_arm_server/warning # Publish boolean warnings to this topic
command_out_topic: /ariac/arm/follow_joint_trajectory # Publish outgoing commands here (joint_group_position_controller/command or
                                                      # joint_group_vel_controller/command, depending on publish_joint_positions)

# MOVEIT PROPERTIES
move_group_name:  manipulator  # Often 'manipulator' or 'arm'
planning_frame: iwa_link_0  # The MoveIt! planning frame. Often 'base_link'

## PROPERTIES OF INCOMING COMMANDS
command_frame:  iwa_link_0  # TF frame that incoming cmds are given in
command_in_type: "unitless" # "unitless"> in the range [-1:1], as if from joystick. "speed_units"> cmds are in m/s and rad/s
scale: # Only used if command_in_type=="unitless"
  linear:  0.003  # Max linear velocity. Meters per publish_period.
  rotational:  0.006  # Max angular velocity. Rads per publish_period.
  joint: 0.01  # Max joint angular/linear velocity. Rads or Meters per publish period.
low_pass_filter_coeff: 2.  # Larger-> more smoothing to jog commands, but more lag.

## PROPERTIES OF OUTGOING COMMANDS
publish_period: 0.008  # 1/Nominal publish rate [seconds]
publish_delay: 0.005  # delay between calculation and execution start of command
command_out_type: trajectory_msgs/JointTrajectory # What type of topic does your robot driver expect?
                                                  # Currently supported are std_msgs/Float64MultiArray (for ros_control JointGroupVelocityController)
                                                  # or trajectory_msgs/JointTrajectory (for Universal Robots and other non-ros_control robots)

# Can save some bandwidth as most robots only require positions or velocities. This must be matched with "command_out_topic" setting
publish_joint_positions: true
publish_joint_velocities: true
publish_joint_accelerations: false

## STOPPING BEHAVIOR
incoming_command_timeout:  5  # Stop jogging if X seconds elapse without a new cmd

## CONFIGURE HANDLING OF SINGULARITIES AND JOINT LIMITS
lower_singularity_threshold:  30  # Start decelerating when the condition number hits this (close to singularity). Larger --> closer to singularity
hard_stop_singularity_threshold: 45 # Stop when the condition number hits this. Larger --> closer to singularity
joint_limit_margin: 0.1 # added as a buffer to joint limits [radians]. If moving quickly, make this larger.

## COLLISION CHECKING
check_collisions: false # Check collisions?
collision_check_rate: 5 # [Hz] Collision-checking can easily bog down a CPU if done too often.
collision_proximity_threshold: 0.01 # Start decelerating when a collision is this far [m]
hard_stop_collision_proximity_threshold: 0.0005 # Stop when a collision is this far [m]

